// Prevents additional console window on Windows in release, DO NOT REMOVE!!
#![cfg_attr(not(debug_assertions), windows_subsystem = "windows")]

mod controller;
mod tray;
mod setting;
mod xeno_utils;

fn main() {
    simple_logger::init_with_level(log::Level::Debug).unwrap();
    xenocontrol_lib::run();
}

// fn main() {
//     // Âä®ÊÄÅÂä†ËΩΩ XInput DLL
//     // if dynamic_load_xinput().is_err() {
//     //     eprintln!("Êó†Ê≥ïÂä†ËΩΩ XInput DLL");
//     //     return;
//     // }
//
//     let xinput = XInputHandle::load_default().unwrap();
//
//     loop {
//         // Â∞ùËØïËØªÂèñÊéßÂà∂Âô® 0ÔºàÊúÄÂ§öÊîØÊåÅ 0‚Äì3Ôºâ
//         match xinput.get_state(0) {
//             Ok(state) => {
//                 // Ë±°ÂæÅÊÄß‰ΩøÁî® Rust È£éÊ†ºÁöÑÊñπÊ≥ïÂà§Êñ≠ÊåâÈíÆ
//                 if state.south_button() {
//                     println!("Xbox A ÈîÆÔºàSouthÔºâË¢´Êåâ‰∏ã");
//                 }
//                 if state.east_button() {
//                     println!("Xbox B ÈîÆÔºàEastÔºâË¢´Êåâ‰∏ã");
//                 }
//                 if state.north_button() {
//                     println!("Xbox Y ÈîÆÔºàNorthÔºâË¢´Êåâ‰∏ã");
//                 }
//                 if state.west_button() {
//                     println!("Xbox X ÈîÆÔºàWestÔºâË¢´Êåâ‰∏ã");
//                 }
//
//                 // ÊëáÊùÜÂùêÊ†á
//                 let (lx, ly) = state.left_stick_raw();
//                 println!("Â∑¶ÊëáÊùÜ raw = ({}, {})", lx, ly);
//                 let (rx, ry) = state.right_stick_raw();
//                 println!("Âè≥ÊëáÊùÜ raw = ({}, {})", rx, ry);
//             }
//             Err(err) => {
//                 println!("ÊâãÊüÑÊú™ËøûÊé•ÊàñÊó†Ê≥ïËØªÂèñÁä∂ÊÄÅ: {:?}", err);
//             }
//         }
//
//         thread::sleep(Duration::from_millis(500));
//     }
// }

// fn main() {
//     let mut gilrs = Gilrs::new().expect("Êó†Ê≥ïÂàùÂßãÂåñ gilrs");
//
//     println!("üéÆ gilrs 0.11 Â∑≤ÂàùÂßãÂåñ");
//
//     // ÂàóÂá∫ÂΩìÂâçËøûÊé•ÁöÑÊâãÊüÑ
//     for (_id, gamepad) in gilrs.gamepads() {
//         println!(
//             "‚ùáÔ∏è Ê£ÄÊµãÂà∞ÊâãÊüÑ {}: {} (VID={:?}, PID={:?})",
//             _id,
//             gamepad.name(),
//             gamepad.vendor_id(),
//             gamepad.product_id()
//         );
//     }
//
//     println!("\nÂºÄÂßãÁõëÂê¨ËæìÂÖ•‰∫ã‰ª∂...\n");
//
//     loop {
//         while let Some(Event { id, event, .. }) = gilrs.next_event() {
//             match event {
//                 EventType::ButtonPressed(button, _) => {
//                     println!("üéØ ÊâãÊüÑ {} Êåâ‰∏ãÊåâÈíÆ {:?}", id, button);
//                 }
//                 EventType::ButtonReleased(button, _) => {
//                     println!("üîÑ ÊâãÊüÑ {} ÈáäÊîæÊåâÈíÆ {:?}", id, button);
//                 }
//                 EventType::AxisChanged(axis, value, _) => {
//                     if value.abs() > 0.1 {
//                         println!("üß≠ ÊâãÊüÑ {} ËΩ¥ {:?} ÂÄº {:.2}", id, axis, value);
//                     }
//                 }
//                 evt => {
//                     println!("‚ÑπÔ∏è ÂÖ∂‰ªñ‰∫ã‰ª∂: {:?}", evt);
//                 }
//             }
//         }
//     }
// }

