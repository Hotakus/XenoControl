name: Tauri Cross-Platform Build (Fixed)

on:
  push:
    tags:
      - "v*"          # 匹配所有 v 开头的标签
      - "release-*"   # 匹配所有 release- 开头的标签
    branches:
      - "release/**"  # 匹配所有 release/ 开头的分支

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write

    steps:
      # 步骤 1: 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 步骤 2: 修复的 Rust 安装步骤
      - name: Install Rust (Fixed)
        # 使用正确的 Action 名称和版本
        uses: actions-rust/setup-rust@v1.7.0
        with:
          toolchain: stable
          components: rust-src, clippy
          # 可选：设置国内镜像加速
          # target: x86_64-unknown-linux-gnu
          # profile: minimal
          # default: true

      # 步骤 3: 安装 Tauri CLI
      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0.0"

      # 步骤 4: Linux 依赖安装
      - name: Install Linux Dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      # 步骤 5: 缓存优化
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # 步骤 6: 设置应用版本
      - name: Set Application Version
        run: |
          # 提取标签名作为版本
          VERSION=${GITHUB_REF#refs/tags/}
          # 更新配置文件
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" src-tauri/tauri.conf.json
          # 验证更新
          echo "Updated version:"
          grep '"version":' src-tauri/tauri.conf.json

      # 步骤 7: 构建应用
      - name: Build Tauri Application
        run: cargo tauri build --verbose

      # 步骤 8: 上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.platform }}-${{ github.ref_name }}
          path: |
            src-tauri/target/release/bundle/**
            src-tauri/target/**/*.msi
            src-tauri/target/**/*.AppImage